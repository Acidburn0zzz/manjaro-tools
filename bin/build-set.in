#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

if [[ -r @libdir@/messages.sh ]];then
    source @libdir@/messages.sh
fi

if [[ -r @libdir@/build-api.sh ]];then
    source @libdir@/build-api.sh
fi

run(){
    eval_profile
    if ${pretend}; then
	if ${clean_rundir}; then
	    git_clean "n"
	fi
	display_settings
	exit 1
    else
	if ${clean_rundir}; then
	    git_clean "q"
	fi
	display_settings
	chroot_init
	chroot_build
	if ${repo}; then
	    repo_create
	fi
	if ${sign}; then
	    sign_pkgs
	fi
    fi
}

export LC_MESSAGES=C

manjaro_tools_conf='@sysconfdir@/manjaro-tools.conf'

if [[ -f ${manjaro_tools_conf} ]]; then
    source ${manjaro_tools_conf}
fi

if [[ -n ${profiledir} ]];then
    profiledir=${profiledir}
else
    profiledir='@sysconfdir@/sets'
fi

if [[ -n ${profile} ]];then
    profile=${profile}
else
    profile='default'
fi

arch=$(uname -m)

if [[ -n ${branch} ]];then
    branch=${branch}
else
    branch='stable'
fi

if [[ -n ${chroots} ]];then
    chroots=${chroots}
else
    chroots='/srv/manjarobuild'
fi

if [[ -n ${repodir} ]];then
    repodir=${repodir}
else
    repodir='/opt/build-repo'
fi

if [[ -r /etc/makepkg.conf ]]; then
    source /etc/makepkg.conf
fi

pacman_conf_arch='default'

clean_first=false
clean_rundir=false
namcap=false
nosystemd=false
pretend=false
is_profile=false
repo=false
sign=false

base_packages=('base-devel')

mkchroot_args=()
mkchrootpkg_args=()
makepkg_args=()

usage() {
    echo "Usage: ${0##*/} [options] -- [makepkg_args]"
    echo "    -p <profile>       Set profile or pkg [default: ${profile}]"
    echo "    -a <arch>          Set arch  [default: ${arch}]"
    echo "    -b <branch>        Set branch [default: ${branch}]"
    echo "    -r <dir>           Chroots directory [default: ${chroots}]"
    echo '    -c                 Clean chroot and pkg cache'
    echo '    -n                 Run namcap check'
    echo '    -w                 Wipe clean pkgbuild directory'
    echo '    -y                 Add packages to repo'
    echo '    -s                 Sign packages'
    echo '    -q                 Query settings and pretend build'
    echo '    -x                 Use classic chroot instead of systemd-nspawn'
    echo '                       Useful for testing if systemd is running to bypass autodetection'
    echo '    -h                 This help'
    echo ''
    echo ''
    exit 1
}

opts='p:a:b:r:cnwysqxh'

while getopts "${opts}" arg; do
    case "${arg}" in
	p) profile="$OPTARG" ;;
	a) arch="$OPTARG" ;;
	b) branch="$OPTARG" ;;
	r) chroots="$OPTARG" ;;
	c) clean_first=true ;;
	n) namcap=true;;
	x) nosystemd=true ;;
	q) pretend=true ;;
	w) clean_rundir=true ;;
	y) repo=true ;;
	s) sign=true ;;
	h) usage ;;
    esac
done

if [[ "$arch" == 'multilib' ]]; then
    pacman_conf_arch='multilib'
    arch='x86_64'
    branch="${branch}-multilib"
    base_packages+=('multilib-devel')
fi

pacman_conf="@pkgdatadir@/pacman-${pacman_conf_arch}.conf"
makepkg_conf="@pkgdatadir@/makepkg-${arch}.conf"

chrootdir=${chroots}/${branch}-${arch}

set_pkgdir

if ${nosystemd};then
    mkchroot_args+=(-x)
fi

if ${namcap};then
    mkchrootpkg_args+=(-n)
fi

mkchroot_args+=(-C ${pacman_conf} -M ${makepkg_conf} -b ${branch})

mkchrootpkg_args+=(-b ${branch} -r ${chrootdir})

makepkg_args+=("${*:$OPTIND}")

if [[ $EUID !=  0 ]]; then
    die 'This script must be run as root.'
fi

run $@
